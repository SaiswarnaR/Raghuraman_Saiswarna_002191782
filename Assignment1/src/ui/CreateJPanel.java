/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.FlowLayout;
import java.awt.Image;
import java.io.File;
import java.math.BigInteger;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import model.Person;

/**
 *
 * @author vigne
 */
public class CreateJPanel extends javax.swing.JPanel {

    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT));
    /**
     * Creates new form CreateJPanel
     */
    
    Person person;
    
    public CreateJPanel(Person person) {
        initComponents();
        this.person = person;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName7 = new javax.swing.JLabel();
        lblName1 = new javax.swing.JLabel();
        lblPersonalInfo = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblAddressLine1 = new javax.swing.JLabel();
        lblAddressLine2 = new javax.swing.JLabel();
        lblZipcode = new javax.swing.JLabel();
        lblDateofBirth = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        lblTelephoneNumber = new javax.swing.JLabel();
        lblFaxNumber = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        lblSSN = new javax.swing.JLabel();
        lblMedicalrecordNumber = new javax.swing.JLabel();
        lblHealthplanNumber = new javax.swing.JLabel();
        lblBankaccountNumber = new javax.swing.JLabel();
        lblCertificatelicenseNumber = new javax.swing.JLabel();
        lblVehicleIdentifier = new javax.swing.JLabel();
        lblDeviceIdentifier = new javax.swing.JLabel();
        lblLinkedIn = new javax.swing.JLabel();
        lblIPAddress = new javax.swing.JLabel();
        lblBiometricIdentifier = new javax.swing.JLabel();
        lblProfileImage = new javax.swing.JLabel();
        lblUniqueIdentifier = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAddressLine1 = new javax.swing.JTextField();
        txtAddressLine2 = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtZipCode = new javax.swing.JTextField();
        txtDateofBirth = new javax.swing.JTextField();
        txtTelephoneNumber = new javax.swing.JTextField();
        txtFaxNumber = new javax.swing.JTextField();
        txtEmailaddress = new javax.swing.JTextField();
        txtSSN = new javax.swing.JTextField();
        txtMedicalrecordNumber = new javax.swing.JTextField();
        txtHealthplanNumber = new javax.swing.JTextField();
        txtBankaccountNumber = new javax.swing.JTextField();
        txtCertificatelicenseNumber = new javax.swing.JTextField();
        txtVehicleIdentifier = new javax.swing.JTextField();
        txtDeviceIdentifier = new javax.swing.JTextField();
        txtLinkedin = new javax.swing.JTextField();
        txtIPAddress = new javax.swing.JTextField();
        txtBiometricIdentifier = new javax.swing.JTextField();
        txtUniqueIdentifier = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblPersonImage = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        txtProfileImage = new javax.swing.JTextField();
        lblContactInfo = new javax.swing.JLabel();
        lblIdentity = new javax.swing.JLabel();
        lblBioinfo = new javax.swing.JLabel();
        btnUploadBiometrics = new javax.swing.JButton();

        lblName7.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblName7.setText("Name:");

        lblName1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblName1.setText("Name:");

        lblPersonalInfo.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblPersonalInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonalInfo.setText("Personal Info");
        lblPersonalInfo.setToolTipText("");

        lblName.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblName.setText("Name:");

        lblAddressLine1.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblAddressLine1.setText("Address Line1:");

        lblAddressLine2.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblAddressLine2.setText("Address Line2:");

        lblZipcode.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblZipcode.setText("Zipcode:");

        lblDateofBirth.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblDateofBirth.setText("Date of Birth:");

        lblCity.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblCity.setText("City:");

        lblState.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblState.setText("State:");

        lblTelephoneNumber.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblTelephoneNumber.setText("Phone Number:");

        lblFaxNumber.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblFaxNumber.setText("Fax Number:");

        lblEmailAddress.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblEmailAddress.setText("Email Address:");

        lblSSN.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblSSN.setText("Social Security number:");

        lblMedicalrecordNumber.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblMedicalrecordNumber.setText("Medical Record Number:");

        lblHealthplanNumber.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblHealthplanNumber.setText("Health Plan Beneficiary Number:");

        lblBankaccountNumber.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblBankaccountNumber.setText("Bank Account Number:");

        lblCertificatelicenseNumber.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblCertificatelicenseNumber.setText("Certificate License Number:");

        lblVehicleIdentifier.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblVehicleIdentifier.setText("Vehicle Identifier:");

        lblDeviceIdentifier.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblDeviceIdentifier.setText("Device Identifier:");

        lblLinkedIn.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblLinkedIn.setText("Linkedin:");

        lblIPAddress.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblIPAddress.setText("Internet Protocol Address:");

        lblBiometricIdentifier.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblBiometricIdentifier.setText("Biometric Identifier:");

        lblProfileImage.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblProfileImage.setText("Profile Image:");

        lblUniqueIdentifier.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 12)); // NOI18N
        lblUniqueIdentifier.setText("Unique Identifier:");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtAddressLine1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressLine1ActionPerformed(evt);
            }
        });

        txtAddressLine2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressLine2ActionPerformed(evt);
            }
        });

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        txtState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStateActionPerformed(evt);
            }
        });

        txtZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeActionPerformed(evt);
            }
        });

        txtDateofBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateofBirthActionPerformed(evt);
            }
        });

        txtTelephoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelephoneNumberActionPerformed(evt);
            }
        });

        txtFaxNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFaxNumberActionPerformed(evt);
            }
        });

        txtEmailaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailaddressActionPerformed(evt);
            }
        });

        txtSSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSSNActionPerformed(evt);
            }
        });

        txtMedicalrecordNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicalrecordNumberActionPerformed(evt);
            }
        });

        txtHealthplanNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHealthplanNumberActionPerformed(evt);
            }
        });

        txtBankaccountNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBankaccountNumberActionPerformed(evt);
            }
        });

        txtCertificatelicenseNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCertificatelicenseNumberActionPerformed(evt);
            }
        });

        txtVehicleIdentifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVehicleIdentifierActionPerformed(evt);
            }
        });

        txtDeviceIdentifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeviceIdentifierActionPerformed(evt);
            }
        });

        txtLinkedin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkedinActionPerformed(evt);
            }
        });

        txtIPAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIPAddressActionPerformed(evt);
            }
        });

        txtBiometricIdentifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBiometricIdentifierActionPerformed(evt);
            }
        });

        txtUniqueIdentifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUniqueIdentifierActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Lucida Sans Unicode", 0, 11)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUploadImage.setText("Select Picture");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        txtProfileImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfileImageActionPerformed(evt);
            }
        });

        lblContactInfo.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblContactInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblContactInfo.setText("Contact Info");

        lblIdentity.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblIdentity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIdentity.setText("Identity Info");

        lblBioinfo.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        lblBioinfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBioinfo.setText("Biometric Info");

        btnUploadBiometrics.setText("Select Picture");
        btnUploadBiometrics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadBiometricsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCity)
                                    .addComponent(lblAddressLine2)
                                    .addComponent(lblState))
                                .addGap(13, 13, 13))
                            .addComponent(lblVehicleIdentifier, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDeviceIdentifier, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUniqueIdentifier, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtDeviceIdentifier, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUniqueIdentifier, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCertificatelicenseNumber)
                            .addComponent(lblIPAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblPersonImage)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMedicalrecordNumber)
                            .addComponent(lblHealthplanNumber)
                            .addComponent(lblBankaccountNumber)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(lblIdentity)))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHealthplanNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCertificatelicenseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVehicleIdentifier, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtBankaccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMedicalrecordNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAddressLine1)
                                    .addComponent(lblName))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblZipcode)
                            .addComponent(lblDateofBirth)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSSN)
                                .addGap(127, 127, 127)
                                .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(143, 143, 143)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblBiometricIdentifier)
                                        .addGap(28, 28, 28)
                                        .addComponent(btnUploadBiometrics))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblProfileImage)
                                        .addGap(49, 49, 49)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblBioinfo)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(btnUploadImage)
                                                .addComponent(txtBiometricIdentifier, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                                .addComponent(txtProfileImage))))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPersonalInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(246, 246, 246)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSave)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblFaxNumber)
                                            .addComponent(lblTelephoneNumber)
                                            .addComponent(lblEmailAddress)
                                            .addComponent(lblLinkedIn))
                                        .addGap(68, 68, 68)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblContactInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtFaxNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEmailaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtLinkedin, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 133, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonalInfo)
                    .addComponent(lblContactInfo))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelephoneNumber)
                    .addComponent(txtTelephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFaxNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFaxNumber)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddressLine1)
                            .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddressLine2)
                            .addComponent(txtAddressLine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblState)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblZipcode)
                            .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmailAddress)
                            .addComponent(txtEmailaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLinkedIn)
                            .addComponent(txtLinkedin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateofBirth)
                    .addComponent(txtDateofBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdentity)
                    .addComponent(lblBioinfo))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSSN)
                    .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProfileImage)
                    .addComponent(btnUploadImage))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(txtMedicalrecordNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHealthplanNumber)
                                    .addComponent(txtHealthplanNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblBiometricIdentifier)
                                    .addComponent(btnUploadBiometrics))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBankaccountNumber)
                            .addComponent(txtBankaccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCertificatelicenseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCertificatelicenseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblMedicalrecordNumber))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtProfileImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(63, 63, 63)
                        .addComponent(txtBiometricIdentifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVehicleIdentifier)
                    .addComponent(txtVehicleIdentifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeviceIdentifier)
                    .addComponent(txtDeviceIdentifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(lblPersonImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIPAddress)
                    .addComponent(txtIPAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUniqueIdentifier)
                    .addComponent(txtUniqueIdentifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAddressLine1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressLine1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressLine1ActionPerformed

    private void txtTelephoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelephoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelephoneNumberActionPerformed

    private void txtEmailaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailaddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailaddressActionPerformed

    private void txtFaxNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFaxNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFaxNumberActionPerformed

    private void txtSSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSSNActionPerformed

    private void txtStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStateActionPerformed

    private void txtAddressLine2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressLine2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressLine2ActionPerformed

    private void txtDateofBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateofBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateofBirthActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeActionPerformed

    private void txtMedicalrecordNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicalrecordNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicalrecordNumberActionPerformed

    private void txtBankaccountNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBankaccountNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBankaccountNumberActionPerformed

    private void txtCertificatelicenseNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCertificatelicenseNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCertificatelicenseNumberActionPerformed

    private void txtHealthplanNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHealthplanNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHealthplanNumberActionPerformed

    private void txtVehicleIdentifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVehicleIdentifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVehicleIdentifierActionPerformed

    private void txtDeviceIdentifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeviceIdentifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeviceIdentifierActionPerformed

    private void txtIPAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIPAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIPAddressActionPerformed

    private void txtLinkedinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkedinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkedinActionPerformed

    private void txtBiometricIdentifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBiometricIdentifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBiometricIdentifierActionPerformed

    private void txtUniqueIdentifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUniqueIdentifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUniqueIdentifierActionPerformed

    boolean Validation (){
        
         //Alphanumeric Regular Expression
        String alphanumPattern = "^[a-zA-Z0-9]+$";
        Pattern alphanumPatt = Pattern.compile(alphanumPattern);
        
       //Validation for Username 
        String userName = txtName.getText();
        String namePattern = "^[a-zA-Z]{1,30}$"; 
        Pattern namePatt = Pattern.compile(namePattern);
        Matcher nameMatch = namePatt.matcher(userName);
        if(userName.equals("") || !nameMatch.matches() )
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid UserName");
            
        }
        
        //Regex for alphanumeric with characters  
        
       String addressPattern = "^[a-zA-Z0-9!@#$&()\\-`.+,/\"]*$";
         Pattern addressPatt = Pattern.compile(addressPattern);
        
        //Validation for AddressLine1
        
        String addressLine1 = txtAddressLine1.getText();
       // Matcher address1Match = addressPatt.matcher(addressLine1);
         if(addressLine1.equals(""))
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Address Line 1");
            
        }
         
         //Validation for Address Line 2
        
        String addressLine2 = txtAddressLine2.getText();
      //  Matcher address2Match = addressPatt.matcher(addressLine2);
         if(addressLine2.equals("") )
        {
           JOptionPane.showMessageDialog(this, "Please Enter a valid Address Line 2");
            
        }
       
        //Regex for City and state      
        String locationPattern =  "^([A-Z][a-z])+(?:[\\\\s-][A-Z][a-z])*$";
        Pattern locationPatt = Pattern.compile(locationPattern);
        
        //Validation for City 
        
        String userCity = txtCity.getText();
        Matcher cityMatch = namePatt.matcher(userCity);
        if(userCity.equals("") || !cityMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid City");
            
        }
       
        //Validation for State 
        
        String userState = txtState.getText();
        Matcher stateMatch = namePatt.matcher(userState);
        if(userState.equals("") || !stateMatch.matches())
        {
           JOptionPane.showMessageDialog(this, "Please Enter a valid State");            
        }
       
         //Validation for Zipcode 
        
        String userZipcode = txtZipCode.getText();
        String zipCodePattern =  "(?i)^[a-z0-9][a-z0-9\\- ]{0,10}[a-z0-9]$";
        Pattern zipCodePatt = Pattern.compile(zipCodePattern);
        Matcher zipCodeMatch = zipCodePatt.matcher(userZipcode);
        if(userZipcode.equals("") || !zipCodeMatch.matches())
        {
           JOptionPane.showMessageDialog(this, "Please Enter a valid Zipcode");
            
        }
        
        //Validation for Phone number  
        
        String phoneNumber = txtTelephoneNumber.getText();  
        String phoneNumberPattern =  "^\\(?(\\d{3})\\)?[- ]?(\\d{3})[- ]?(\\d{4})$";  
        Pattern phonePatt = Pattern.compile(phoneNumberPattern);             
        Matcher phoneMatch = phonePatt.matcher(phoneNumber);
        if(phoneNumber.equals("") || !phoneMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Phone number");
            
        }
        
          //Validation for Fax number    :   
         
        String faxNumber = txtFaxNumber.getText();     
        String faxNumberPattern = "^\\d{10}$";
        Pattern faxPatt = Pattern.compile(faxNumberPattern);    
        Matcher faxMatch = faxPatt.matcher(faxNumber);
        if(faxNumber.equals("") || !faxMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Fax number");
            
        }
        
        //Validation for Email id
        
        String userEmail = txtEmailaddress.getText();
        String emailPattern =  "^(.+)@.(.+)$";  
        Pattern emailPatt = Pattern.compile(emailPattern);
        Matcher emailMatch = emailPatt.matcher(userEmail);
         if(userEmail.equals("") || !emailMatch.matches())
        {
           JOptionPane.showMessageDialog(this, "Please Enter a valid Email id");
            
        }
       
         
         //Validation for SSN
         
         String userSSN = txtSSN.getText();
         String ssnPattern = "^(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4}$";
         Pattern ssnPatt = Pattern.compile(ssnPattern);
         Matcher ssnMatch = ssnPatt.matcher(userSSN);
          if(userSSN.equals("") || !ssnMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Social security number");
            
        }
       
         
          //Validation for IP Address
          
          // ReGex to numbers from 0 to 255
            String IPnumberPattern = "(\\d{1, 2}|(0|1)\\d{2}|2[0-4]\\d|25[0-5])";

            // ReGex to validate complete IP address
            String IPaddressPattern =  IPnumberPattern + "\\." + IPnumberPattern 
                + "\\." + IPnumberPattern 
                + "\\." + IPnumberPattern;
            
            String userIPAddress = txtIPAddress.getText();
            Pattern IPaddressPatt = Pattern.compile(userIPAddress);
            Matcher IPaddressMatch = IPaddressPatt.matcher(userIPAddress);
            if(userIPAddress.equals("") || !IPaddressMatch.matches())
            {
               JOptionPane.showMessageDialog(this, "Please Enter a valid IP Address");
            }          
          
            //Validation for Linkedin
            
             String userLinkedin = txtLinkedin.getText();   
             String linkedinPattern = "^https:\\/\\/[a-z]{2,3}\\.linkedin\\.com\\/.*$";
            Pattern linkedinPatt = Pattern.compile(linkedinPattern);
            Matcher linkedinMatch = linkedinPatt.matcher(userLinkedin);
            if(userLinkedin.equals("") || !linkedinMatch.matches())
            {
                 JOptionPane.showMessageDialog(this, "Please Enter a valid Linkedin id");
            
            }
            
            //Regex for medical record and health plan number 
            
             String medRecordPattern = "[+-]?[0-9]+";
             Pattern medRecordPatt = Pattern.compile(medRecordPattern);
            
        //Validation for Medical Record number 
        
         String medicalrecordNumber = txtMedicalrecordNumber.getText();         
         Matcher medRecordMatch = medRecordPatt.matcher(medicalrecordNumber);
          if(medicalrecordNumber.equals("") || !medRecordMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Medical Record number");
            
        }
      
        
        //Validation for Health Plan number
        
         String healthPlanNumber = txtHealthplanNumber.getText();       
         Matcher healthPlanMatch = medRecordPatt.matcher(healthPlanNumber);
        if(healthPlanNumber.equals("") || !healthPlanMatch.matches())
        {
           JOptionPane.showMessageDialog(this, "Please Enter a valid Health Plan number");
            
        }
       
        //Validation for Bank account number  
        
         String bankAccountNumber = txtBankaccountNumber.getText();       
         Matcher bankAccountMatch = alphanumPatt.matcher(bankAccountNumber);
        if(bankAccountNumber.equals("") || !bankAccountMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Bank Account number");
            
        }
       
         //Validation for Certificate License number    
         
         String licenseNumber = txtCertificatelicenseNumber.getText();       
         Matcher licenseMatch = alphanumPatt.matcher(licenseNumber);
        if(licenseNumber.equals("") || !licenseMatch.matches())
        {
           JOptionPane.showMessageDialog(this, "Please Enter a valid Certificate License number");
            
        }
        
         //Validation for Vehicle identifier
         
         String vehicleIdentifier = txtVehicleIdentifier.getText();       
         Matcher vehicleMatch = alphanumPatt.matcher(vehicleIdentifier);
        if(vehicleIdentifier.equals("") || !vehicleMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Vehicle identifier");
            
        }
       
         //Validation for Device identifier
         
         String deviceIdentifier = txtVehicleIdentifier.getText();       
         Matcher deviceMatch = alphanumPatt.matcher(deviceIdentifier);
        if(deviceIdentifier.equals("") || !deviceMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Device identifier");
            
        }
        
        //Validation for Unique Identifier
        
        String uniqueIdentifier = txtUniqueIdentifier.getText();
        Matcher uniqueMatch = addressPatt.matcher(uniqueIdentifier);
         if(uniqueIdentifier.equals("") || !uniqueMatch.matches())
        {
            JOptionPane.showMessageDialog(this, "Please Enter a valid Unique identifier");
            
        }
        return true; 
    }
        
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
            
       // Validation();
        if(Validation() == true)
        {
            person.setName(txtName.getText());
            person.setAddressLine1(txtAddressLine1.getText()); 
            person.setAddressLine2(txtAddressLine2.getText()); 
            person.setCity(txtCity.getText()); 
            person.setState(txtState.getText());
            person.setZipCode(txtZipCode.getText());
            person.setTelephoneNumber(txtTelephoneNumber.getText()); 
            person.setFaxNumber(new BigInteger(txtFaxNumber.getText()));  
            person.setEmailAddress(txtEmailaddress.getText());  
            person.setSocialsecurityNumber(txtSSN.getText());
            person.setIpAddress(txtIPAddress.getText());   
            person.setLinkedIn(txtLinkedin.getText()); 
            person.setHealthplanNumber(new BigInteger(txtHealthplanNumber.getText()));
            person.setBankaccountNumber(txtBankaccountNumber.getText());
            person.setCertificatelicenseNumber(txtCertificatelicenseNumber.getText());
            person.setVehicleIdentifier(txtVehicleIdentifier.getText());
            person.setDeviceIdentifier(txtDeviceIdentifier.getText());
            person.setMedicalrecordNumber(new BigInteger(txtMedicalrecordNumber.getText()));     
            SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy", Locale.ENGLISH);
            String dob=txtDateofBirth.getText(); 
            try {
                Date dob_1 = formatter.parse(dob);
                person.setDateofBirth(dob_1);
                } catch (ParseException ex) {
                    Logger.getLogger(CreateJPanel.class.getName()).log(Level.SEVERE, null, ex);           
                }
             String profilePic = txtProfileImage.getText();
            profilePic = profilePic.replace("\\", "\\\\");       
            person.setUniqueIdentifier(txtUniqueIdentifier.getText());
            String biometricPic = txtBiometricIdentifier.getText();
            biometricPic = biometricPic.replace("\\", "\\\\");   
        
        JOptionPane.showMessageDialog(this, "Person Information Saved");  
        
        }
    
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        // TODO add your handling code here:
        
        JFileChooser imgChooser = new JFileChooser();
        FileNameExtensionFilter imgFilter = new FileNameExtensionFilter("IMAGES", "png", "jpg","jpeg");
        imgChooser.addChoosableFileFilter(imgFilter);
        imgChooser.showOpenDialog(null);
        File file = imgChooser.getSelectedFile();
        String fileName = file.getAbsolutePath();
        txtProfileImage.setText(fileName);
        
         person.setprofileImagepath(fileName);
        
        
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void txtProfileImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfileImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProfileImageActionPerformed

    private void btnUploadBiometricsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadBiometricsActionPerformed
        
        JFileChooser imgChooser = new JFileChooser();
        FileNameExtensionFilter imgFilter = new FileNameExtensionFilter("IMAGES", "png", "jpg","jpeg");
        imgChooser.addChoosableFileFilter(imgFilter);
        imgChooser.showOpenDialog(null);
        File file = imgChooser.getSelectedFile();
        String biometricName = file.getAbsolutePath();
        txtBiometricIdentifier.setText(biometricName);  
        
        person.setbiometricImagepath(biometricName);
    }//GEN-LAST:event_btnUploadBiometricsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUploadBiometrics;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JLabel lblAddressLine1;
    private javax.swing.JLabel lblAddressLine2;
    private javax.swing.JLabel lblBankaccountNumber;
    private javax.swing.JLabel lblBioinfo;
    private javax.swing.JLabel lblBiometricIdentifier;
    private javax.swing.JLabel lblCertificatelicenseNumber;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblContactInfo;
    private javax.swing.JLabel lblDateofBirth;
    private javax.swing.JLabel lblDeviceIdentifier;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFaxNumber;
    private javax.swing.JLabel lblHealthplanNumber;
    private javax.swing.JLabel lblIPAddress;
    private javax.swing.JLabel lblIdentity;
    private javax.swing.JLabel lblLinkedIn;
    private javax.swing.JLabel lblMedicalrecordNumber;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName7;
    private javax.swing.JLabel lblPersonImage;
    private javax.swing.JLabel lblPersonalInfo;
    private javax.swing.JLabel lblProfileImage;
    private javax.swing.JLabel lblSSN;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblTelephoneNumber;
    private javax.swing.JLabel lblUniqueIdentifier;
    private javax.swing.JLabel lblVehicleIdentifier;
    private javax.swing.JLabel lblZipcode;
    private javax.swing.JTextField txtAddressLine1;
    private javax.swing.JTextField txtAddressLine2;
    private javax.swing.JTextField txtBankaccountNumber;
    private javax.swing.JTextField txtBiometricIdentifier;
    private javax.swing.JTextField txtCertificatelicenseNumber;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtDateofBirth;
    private javax.swing.JTextField txtDeviceIdentifier;
    private javax.swing.JTextField txtEmailaddress;
    private javax.swing.JTextField txtFaxNumber;
    private javax.swing.JTextField txtHealthplanNumber;
    private javax.swing.JTextField txtIPAddress;
    private javax.swing.JTextField txtLinkedin;
    private javax.swing.JTextField txtMedicalrecordNumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtProfileImage;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtTelephoneNumber;
    private javax.swing.JTextField txtUniqueIdentifier;
    private javax.swing.JTextField txtVehicleIdentifier;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables

}